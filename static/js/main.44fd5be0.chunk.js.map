{"version":3,"sources":["panels/QrList.js","App.js","index.js"],"names":["QrList","props","id","left","onClick","go","App","useState","activePanel","setActivePanel","setUser","ScreenSpinner","size","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","getUserData","e","currentTarget","dataset","to","View","ReactDOM","render","getElementById"],"mappings":"wNAceA,EAXA,SAAAC,GAAK,OACnB,eAAC,IAAD,CAAOC,GAAID,EAAMC,GAAjB,UACC,cAAC,IAAD,CACCC,KAAM,cAAC,IAAD,CAAiBC,QAASH,EAAMI,GAAI,UAAQ,SADnD,oBAKE,4CCwCWC,EAvCH,WACX,MAAsCC,mBAAS,UAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA+BF,mBAAS,MAAxC,mBAAoBG,GAApB,WACA,EAA4BH,mBAAS,cAACI,EAAA,EAAD,CAAeC,KAAK,WAAzD,mBAAeC,GAAf,WAEAC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECR,EAAQQ,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAabQ,KACA,IAEH,IAAM1B,EAAK,SAAA2B,GACVvB,EAAeuB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,eAACC,EAAA,EAAD,CAAM5B,YAAaA,EAAnB,UAEC,cAAC,EAAD,CAAQN,GAAG,SAASG,GAAIA,IACxB,cAAC,EAAD,CAAQH,GAAG,SAASG,GAAIA,IACxB,cAAC,EAAD,CAASH,GAAG,UAAUG,GAAIA,YCrC/BW,IAAOC,KAAK,gBAEZoB,IAASC,OAAO,cAAC,EAAD,IAASd,SAASe,eAAe,W","file":"static/js/main.44fd5be0.chunk.js","sourcesContent":["import React from 'react';\nimport {Panel, PanelHeader, PanelHeaderBack} from \"@vkontakte/vkui\";\n\nconst QrList = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n      QrList\n\t\t</PanelHeader>\n    <h1>QrList</h1>\n\t</Panel>\n);\n\nexport default QrList;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport { AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport QrShot from './panels/QrList';\nimport QrList from './panels/QrList';\nimport QrCount from './panels/QrList';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('QrShot');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function getUserData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n    getUserData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} >\n          {/*popout={popout}*/}\n\t\t\t\t\t<QrShot id='QrShot' go={go} />\n\t\t\t\t\t<QrList id='QrList' go={go} />\n\t\t\t\t\t<QrCount id='QrCount' go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\"\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}